#!/bin/bash --posix

# This script generates executable code in $outputFolder with mathh elementary
# functions, as well as with approximations generated by Metalibm, for the below
# listed functions in $inputFile. It assumes uniform precision $prec, and maximum
# depth for approximation of $depth, error distribution $errorDist and table index
# width $tableWidth.

# to be run from Daisy main directory

prec=$1
echo "Running for precision: $prec"

inputFile=$2
echo "with input file: $inputFile"

outputFolder=$3
echo "in output folder: $outputFolder"

depth=$4
echo "with maximum approximation depth: $depth"

errorDist=$5      # default = equal  (alternative: deriv)
echo "with error distribution: $errorDist"

tableWidth=$6     # default = 8
echo "with table index width: $tableWidth"

mkdir "output/${outputFolder}/"

resultsFile="output/${outputFolder}/results_${prec}_${inputFile}.txt"
rm -f "${resultsFile}"
touch -f "${resultsFile}"

echo "# Stats: mean cycles, std. deviation, min cycles, max cycles" >> "${resultsFile}"
echo ""

# # run on the following functions
declare -a functions=("sinxx10" "xu1" "xu2" "integrate18257" \
  "integrateStoutemyer2007" "axisRotationX" \
  "axisRotationY" "rodriguesRotation" "pendulum1" "pendulum2" \
  "forwardk2jX" "forwardk2jY" \
  "ex2_1" "ex2_2" "ex2_3" "ex2_4" "ex2_5" \
  "ex2_9" "ex2_10" "ex2_11" "ex3_d")

# Make sure the code is compiled and daisy script generated
sbt compile
if [ ! -e daisy ]; then sbt script; fi

for fnc in "${functions[@]}"
do
  echo "${fnc}" >> "${resultsFile}"

  # ------------------------------------------------------
  #   Generate executable with math.h elementary functions
  # ------------------------------------------------------
  # '-f' will avoid printing a message if the file does not exist
  rm -f output/mathh_accuracy.csv

  time ./daisy testcases/transcendentals/$inputFile --functions=$fnc --codegen \
  --lang=C --benchmarking --bound=10000000 --precision=$prec --comp-opts=[cse] \
  --results-csv=mathh_accuracy.csv

  ./output/compileScript.sh TranscendentalBenchmarks
  mv ./output/TranscendentalBenchmarks_exe ./output/${outputFolder}/exe_mathh_$fnc

  # save generated C code
  mv output/TranscendentalBenchmarks.c ./output/${outputFolder}/mathh_${fnc}.c

  # ------------------------------------------------------------
  #   Generate executable with metalibm-generated approximations
  # ------------------------------------------------------------
  rm -f output/metalibm_accuracy.csv
  rm -f output/TranscendentalBenchmarks.c
  rm -f output/TranscendentalBenchmarks.o
  rm -f output/TranscendentalBenchmarks_exe

  time ./daisy testcases/transcendentals/$inputFile --functions=$fnc --metalibm \
  --codegen --lang=C --benchmarking --bound=10000000 --results-csv=metalibm_accuracy.csv \
  --timeout=300 --comp-opts=[cse] --errorDist=$errorDist --precision=$prec \
  --depth=$depth --tableIndexWidth=$tableWidth

  # run benchmarking
  chmod +x output/TranscendentalBenchmarks_compileScript.sh
  ./output/TranscendentalBenchmarks_compileScript.sh    # generated file
  mv ./output/TranscendentalBenchmarks_exe ./output/${outputFolder}/exe_metalibm_$fnc

  # save generated C code
  mv output/TranscendentalBenchmarks.c ./output/${outputFolder}/metalibm_${fnc}.c

  # clean up generated temporary files
  rm -f metalibm/*symmetrical_subdomain_*
  rm -f metalibm/*gappa_poly_q_for_k
  rm -f metalibm/*_id_sollya_git_devel*
  rm -f metalibm/problemdefForDaisy*
  rm -f metalibmParams_*.txt


  # --------------------------
  #      benchmarking
  # --------------------------

  TIMEDATA_FILENAME_MATHH="${fnc}_timedata_mathh.txt"
  MATHH_ACCURACY="$(sed '2q;d' output/mathh_accuracy.csv)"

  TIMEDATA_FILENAME_METALIBM="${fnc}_timedata.txt"
  ACCURACY="$(sed '2q;d' output/metalibm_accuracy.csv)"

  ./output/${outputFolder}/exe_mathh_$fnc "${TIMEDATA_FILENAME_MATHH}"

  ./output/${outputFolder}/exe_metalibm_$fnc "${TIMEDATA_FILENAME_METALIBM}"

  STATS="$(python scripts/metalibm/timedata_processing.py ${TIMEDATA_FILENAME_MATHH} ${TIMEDATA_FILENAME_METALIBM} )"

  echo "${STATS}"
  echo "mathh accuracy: ${MATHH_ACCURACY}, metalibm accuracy: ${ACCURACY}"

  echo "${STATS}" >> "${resultsFile}"
  echo "mathh accuracy: ${MATHH_ACCURACY}, metalibm accuracy: ${ACCURACY}" >> "${resultsFile}"

  rm $TIMEDATA_FILENAME_MATHH
  rm $TIMEDATA_FILENAME_METALIBM

  echo "" >> "${resultsFile}"
  echo "" >> "${resultsFile}"

done
